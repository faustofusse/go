// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package list

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"strings"

	"github.com/labstack/echo/v4"
)

type ListProps[T Row, D any] struct {
	Records    []T
	Data       D
	Search     *SearchOptions
	Row        func(*ListProps[T, D], T) templ.Component
	Header     func(*ListProps[T, D]) templ.Component
	Content    func(*ListProps[T, D]) templ.Component
	DisableRow bool
}

func List[T Row, D any](ctx echo.Context, props *ListProps[T, D]) templ.Component {
	htmx := ctx.Request().Header.Get("Hx-Request") == "true"
	target := ctx.Request().Header.Get("Hx-Target")
	if !htmx || strings.Contains(target, "content") {
		if len(strings.Split(props.Search.BasePath, "/")) <= 2 {
			ctx.Response().Header().Set("Hx-Push-Url", props.Search.BasePath)
		}
		return props.Content(props)
	} else {
		ctx.Response().Header().Set("HX-Replace-Url", props.Search.Path())
		return Rows(props)
	}
}

func Table[T Row, D any](props *ListProps[T, D]) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"w-full h-full py-4 pt-0 justify-center overflow-auto\"><table class=\"w-full rounded-lg bg-white text-sm font-normal text-left\"><thead class=\"rounded-lg sticky top-0 bg-gray-50\"><tr id=\"header\" class=\"bg-white shadow-[0_1px_0_rgba(0,0,0,0.1)]\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if props.Header != nil {
			templ_7745c5c3_Err = props.Header(props).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<th></th>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !props.DisableRow {
			templ_7745c5c3_Err = EmptyHeaderColumn().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</tr></thead> <tbody>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Rows(props).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</tbody></table></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
